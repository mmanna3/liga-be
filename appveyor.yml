version: 1.0.{build}
image: Visual Studio 2022
branches:
  only:
    - main
environment:
  deploy_username:
    secure: ZumRpgIeGcRgW3H7yXK0bQ==
  deploy_password:
    secure: SFAvHfsz398LTl83QbS5gw==
  deploy_publish_url_1:
    secure: K69zP3wjxwDVH7s/sC4OthodaOPs3etcQKSoMEi3J24Zzy/Pqe9QtILQ+TIhpLoJDz6QebuZDVdqciF20w136YeX6zpfMUBdcoVxkrySUdQ=
  deploy_publish_url_2:
    secure: Z3kFMmPS+/3jEb5uz8UtB3IsEwaE+Vyv1TS5Ry3tumcQSr0Q1PooCrfztHFGA5CVScwWtIHuv7GPMn7OIANfIE/Z558TKobWJ5AGPrDMkvk=
  ms_deploy_site_1:
    secure: kdhuPVSl0krNFGjfcNUmBMLohWaq8nbOx5Ven52IcoU=
  ms_deploy_site_2:
    secure: Pf9YKHPQdl46IZWXnY91FKlQ5RlIjuikjHk855wYG5Y=
  db_server: 
    secure: GENtSiIHJlcMVdOs9CjeQw==
  db_name:
    secure: WrPAgPpTyM3R6EL58lnCDg==
  db_username:
    secure: WrPAgPpTyM3R6EL58lnCDg==
  db_password:
    secure: SFAvHfsz398LTl83QbS5gw==
  clave_secreta_jwt:
    secure: D7/n0u0zIlvANO9rI/Wn0FFpipPrMJihdNGClSAG+oH6N7jm2EaAbD++QFAbCXGgT/Ixsp+T+KAm/qEd/OTS6jiTOXx21PFSj3c6zdvB1Fuldb9LwgMZ/3vF2UCSgUMtWHu1KJikA2pY0F++TRteBlnnerbxxBNZP5QlaCVn6js=
install:
  - ps: >-
      $file = "./Api/appsettings.Production.json";
      (Get-Content $file).Replace("{db_server}", $env:db_server).Replace("{db_name}", $env:db_name).Replace("{db_username}", $env:db_username).Replace("{db_password}", $env:db_password).Replace("{clave_secreta_jwt}", $env:clave_secreta_jwt) | Set-Content $file
build_script:
  - cmd: dotnet publish --framework net8.0 /p:EnvironmentName=Production --self-contained true -r win-x64 Api --output %appveyor_build_folder%\dist
  # Crear archivo app_offline.htm en la carpeta de distribución
  - ps: >-
      $appOfflineContent = "<!DOCTYPE html><html><head><title>Aplicación en mantenimiento</title></head><body><h1>La aplicación está siendo actualizada</h1><p>Por favor, espere unos momentos mientras completamos el proceso de actualización.</p></body></html>";
      Set-Content -Path "$env:appveyor_build_folder\dist\app_offline.htm" -Value $appOfflineContent
test_script:
  # Ejecuta tests
  - dotnet test --configuration Release --runtime win-x64
before_deploy:
  # Aplica migraciones pendientes
  - cd Api
  - dotnet tool install dotnet-ef --global --version 8.0.0
  - ps: $DefaultConnectionString = (Get-Content appsettings.Production.json | ConvertFrom-Json).ConnectionStrings.Default
  - ps: dotnet ef database update --connection $DefaultConnectionString
artifacts:
  - path: dist
deploy:
  - provider: WebDeploy
    remove_files: true
    skip_dirs: \\App_Data;\\Imagenes;\\logs;\\aspnet_client;\\wwwroot;\\well-known;
    server: $(deploy_publish_url_1)
    website: $(ms_deploy_site_1)
    username: $(deploy_username)
    password: $(deploy_password)
    ntlm: false
    # Usar la regla AppOffline para detener la aplicación durante el despliegue
    app_offline: true
  - provider: WebDeploy
    remove_files: true
    skip_dirs: \\App_Data;\\Imagenes;\\logs;\\aspnet_client;\\wwwroot;\\well-known;
    server: $(deploy_publish_url_2)
    website: $(ms_deploy_site_2)
    username: $(deploy_username)
    password: $(deploy_password)
    ntlm: false
    # Usar la regla AppOffline para detener la aplicación durante el despliegue
    app_offline: true

after_deploy:
  # Eliminar el archivo app_offline.htm de ambos servidores después del despliegue
  - ps: |
      # Función para eliminar app_offline.htm usando WebDeploy
      function Remove-AppOffline {
        param (
          [string]$server,
          [string]$site,
          [string]$username,
          [string]$password
        )
        
        Write-Host "Eliminando archivos app_offline.htm del servidor $server, sitio $site..."
        
        # Lista de posibles variaciones del nombre del archivo
        $fileVariations = @(
          "app_offline.htm",
          "App_Offline.htm",
          "APP_OFFLINE.HTM",
          "App_offline.htm"
        )
        
        $success = $false
        
        foreach ($fileName in $fileVariations) {
          Write-Host "Intentando eliminar $fileName..."
          
          # Crear la configuración de MSDeploy para esta variante
          $msdeployParams = "-verb:delete -dest:contentPath=""$site/$fileName"",computerName=""$server"",username=""$username"",password=""$password"",authType=""Basic"" -allowUntrusted -enableRule:DoNotDeleteRule"
          
          # Ejecutar MSDeploy para eliminar el archivo
          $msdeployPath = "C:\Program Files\IIS\Microsoft Web Deploy V3\msdeploy.exe"
          & $msdeployPath $msdeployParams.Split() | Out-Host
          
          if ($LASTEXITCODE -eq 0) {
            Write-Host "$fileName eliminado exitosamente de $site"
            $success = $true
          }
          else {
            Write-Host "No se encontró $fileName o no se pudo eliminar"
          }
        }
        
        # Intentar reiniciar la aplicación
        try {
          Write-Host "Intentando reiniciar la aplicación en $site..."
          $msdeployParams = "-verb:sync -source:recycleApp -dest:recycleApp=""$site"",computerName=""$server"",username=""$username"",password=""$password"",authType=""Basic"" -allowUntrusted"
          & $msdeployPath $msdeployParams.Split() | Out-Host
          
          if ($LASTEXITCODE -eq 0) {
            Write-Host "Aplicación reiniciada exitosamente en $site"
          }
          else {
            Write-Warning "No se pudo reiniciar la aplicación en $site. Código de salida: $LASTEXITCODE"
          }
        }
        catch {
          Write-Warning "Error al intentar reiniciar la aplicación: $_"
        }
        
        if ($success) {
          Write-Host "Al menos una variante de app_offline.htm fue eliminada exitosamente de $site"
        }
        else {
          Write-Warning "No se pudo eliminar ninguna variante de app_offline.htm de $site"
        }
      }
      
      # Esperar un momento para asegurarse de que el despliegue se ha completado totalmente
      Start-Sleep -Seconds 10
      
      # Eliminar app_offline.htm del primer servidor
      Remove-AppOffline -server $env:deploy_publish_url_1 -site $env:ms_deploy_site_1 -username $env:deploy_username -password $env:deploy_password
      
      # Eliminar app_offline.htm del segundo servidor
      Remove-AppOffline -server $env:deploy_publish_url_2 -site $env:ms_deploy_site_2 -username $env:deploy_username -password $env:deploy_password
